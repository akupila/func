// Code generated by awsgen from api version 2010-05-08. DO NOT EDIT.

package iam

import "time"

// InstanceProfile manages AWS Identity and Access Management
// InstanceProfiles.
type InstanceProfile struct {
	// The name of the instance profile to create.This parameter allows
	// (through its regex pattern) a string of characters consisting of upper
	// and lowercase alphanumeric characters with no spaces. You can also
	// include any of the following characters: _+=,.@-
	Name string `cloudformation:"InstanceProfileName" input:"name" json:"InstanceProfileName"`

	//  The path to the instance profile. For more information about paths, see
	// IAM Identifiers:
	// https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html
	// in the IAM User Guide.This parameter is optional. If it is not included,
	// it defaults to a slash (/).This parameter allows (through its regex
	// pattern) a string of characters consisting of either a forward slash (/)
	// by itself or a string that must begin and end with forward slashes. In
	// addition, it can contain any ASCII character from the ! (\u0021) through
	// the DEL character (\u007F), including most punctuation characters,
	// digits, and upper and lowercased letters.
	Path *string `cloudformation:"Path" input:"path"`

	// Outputs:

	// A structure containing details about the new instance profile.
	InstanceProfile struct {
		//  The Amazon Resource Name (ARN) specifying the instance profile. For
		// more information about ARNs and how to use them in policies, see IAM
		// Identifiers:
		// https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html
		// in the IAM User Guide.
		ARN string `json:"Arn" output:"arn"`

		// The date when the instance profile was created.
		CreateDate time.Time `output:"create_date"`

		//  The stable and unique string identifying the instance profile. For more
		// information about IDs, see IAM Identifiers:
		// https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html
		// in the IAM User Guide.
		InstanceProfileID string `json:"InstanceProfileId" output:"instance_profile_id"`

		// The name identifying the instance profile.
		InstanceProfileName string `output:"instance_profile_name"`

		//  The path to the instance profile. For more information about paths, see
		// IAM Identifiers:
		// https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html
		// in the IAM User Guide.
		Path string `output:"path"`

		// The role associated with the instance profile.
		Roles []struct {
			//  The Amazon Resource Name (ARN) specifying the role. For more
			// information about ARNs and how to use them in policies, see IAM
			// Identifiers:
			// https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html
			// in the IAM User Guide guide.
			ARN string `json:"Arn" output:"arn"`

			// The policy that grants an entity permission to assume the role.
			AssumeRolePolicyDocument *string `output:"assume_role_policy_document"`

			// The date and time, in ISO 8601 date-time format, when the role was
			// created.
			CreateDate time.Time `output:"create_date"`

			// A description of the role that you provide.
			Description *string `output:"description"`

			// The maximum session duration (in seconds) for the specified role. Anyone
			// who uses the AWS CLI, or API to assume the role can specify the duration
			// using the optional DurationSeconds API parameter or duration-seconds CLI
			// parameter.
			MaxSessionDuration *int `output:"max_session_duration"`

			//  The path to the role. For more information about paths, see IAM
			// Identifiers:
			// https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html
			// in the IAM User Guide.
			Path string `output:"path"`

			// The ARN of the policy used to set the permissions boundary for the
			// role.For more information about permissions boundaries, see Permissions
			// Boundaries for IAM Identities :
			// https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html
			// in the IAM User Guide.
			PermissionsBoundary *struct {
				//  The ARN of the policy used to set the permissions boundary for the user
				// or role.
				PermissionsBoundaryARN *string `json:"PermissionsBoundaryArn" output:"permissions_boundary_arn"`

				//  The permissions boundary usage type that indicates what type of IAM
				// resource is used as the permissions boundary for an entity. This data
				// type can only have a value of Policy.
				PermissionsBoundaryType *string `output:"permissions_boundary_type"`
			} `output:"permissions_boundary"`

			//  The stable and unique string identifying the role. For more information
			// about IDs, see IAM Identifiers:
			// https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html
			// in the IAM User Guide.
			RoleID string `json:"RoleId" output:"role_id"`

			// Contains information about the last time that an IAM role was used. This
			// includes the date and time and the Region in which the role was last
			// used. Activity is only reported for the trailing 400 days. This period
			// can be shorter if your Region began supporting these features within the
			// last year. The role might have been used more than 400 days ago. For
			// more information, see Regions Where Data Is Tracked:
			// https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#access-advisor_tracking-period
			// in the IAM User Guide.
			RoleLastUsed *struct {
				// The date and time, inÂ ISO 8601 date-time format that the role was last
				// used.This field is null if the role has not been used within the IAM
				// tracking period. For more information about the tracking period, see
				// Regions Where Data Is Tracked:
				// https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#access-advisor_tracking-period
				// in the IAM User Guide.
				LastUsedDate *time.Time `output:"last_used_date"`

				// The name of the AWS Region in which the role was last used.
				Region *string `output:"region"`
			} `output:"role_last_used"`

			// The friendly name that identifies the role.
			RoleName string `output:"role_name"`

			// A list of tags that are attached to the specified role. For more
			// information about tagging, see Tagging IAM Identities:
			// https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html in the IAM
			// User Guide.
			Tags []struct {
				// The key name that can be used to look up or retrieve the associated
				// value. For example, Department or Cost Center are common choices.
				Key string `output:"key"`

				// The value associated with this tag. For example, tags with a key name of
				// Department could have values such as Human Resources, Accounting, and
				// Support. Tags with a key name of Cost Center might have values that
				// consist of the number associated with the different cost centers in your
				// company. Typically, many resources have tags with the same key name but
				// with different values.AWS always interprets the tag Value as a single
				// string. If you need to store an array, you can store comma-separated
				// values in the string. However, you must interpret the value in your
				// code.
				Value string `output:"value"`
			} `output:"tags"`
		} `output:"roles"`
	} `output:"instance_profile"`
}

// CloudFormationType returns the CloudFormation type for a AWS Identity and Access Management InstanceProfile.
func (InstanceProfile) CloudFormationType() string { return "AWS::IAM::InstanceProfile" }
