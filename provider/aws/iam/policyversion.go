// Code generated by awsgen from api version 2010-05-08. DO NOT EDIT.

package iam

import "time"

// PolicyVersion manages AWS Identity and Access Management PolicyVersions.
type PolicyVersion struct {
	// The Amazon Resource Name (ARN) of the IAM policy to which you want to
	// add a new version.For more information about ARNs, see Amazon Resource
	// Names (ARNs) and AWS Service Namespaces:
	// https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html
	// in the AWS General Reference.
	PolicyARN string `input:"policy_arn" json:"PolicyArn"`

	// The JSON policy document that you want to use as the content for this new version of the policy.You
	// must provide policies in JSON format in IAM. However, for AWS CloudFormation templates formatted in
	// YAML, you can provide the policy in JSON or YAML format. AWS CloudFormation always converts a YAML
	// policy to JSON format before submitting it to IAM.The regex pattern used to validate this parameter
	// is a string of characters consisting of the following:  Any printable ASCII character ranging from
	// the space character (\u0020) through the end of the ASCII character range
	//   The printable characters in the Basic Latin and Latin-1 Supplement character set (through \u00FF)
	//   The special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D)
	//
	//
	PolicyDocument string `input:"policy_document"`

	// Specifies whether to set this version as the policy's default
	// version.When this parameter is true, the new policy version becomes the
	// operative version. That is, it becomes the version that is in effect for
	// the IAM users, groups, and roles that the policy is attached to.For more
	// information about managed policy versions, see Versioning for Managed
	// Policies:
	// https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html
	// in the IAM User Guide.
	SetAsDefault *bool `input:"set_as_default"`

	// Outputs:

	// A structure containing details about the new policy version.
	PolicyVersion *struct {
		// The date and time, in ISO 8601 date-time format, when the policy version
		// was created.
		CreateDate *time.Time `output:"create_date"`

		// The policy document.The policy document is returned in the response to
		// the GetPolicyVersion and GetAccountAuthorizationDetails operations. It
		// is not returned in the response to the CreatePolicyVersion or
		// ListPolicyVersions operations. The policy document returned in this
		// structure is URL-encoded compliant with RFC 3986. You can use a URL
		// decoding method to convert the policy back to plain JSON text. For
		// example, if you use Java, you can use the decode method of the
		// java.net.URLDecoder utility class in the Java SDK. Other languages and
		// SDKs provide similar functionality.
		Document *string `output:"document"`

		// Specifies whether the policy version is set as the policy's default
		// version.
		IsDefaultVersion *bool `output:"is_default_version"`

		// The identifier for the policy version.Policy version identifiers always
		// begin with v (always lowercase). When a policy is created, the first
		// policy version is v1.
		VersionID *string `json:"VersionId" output:"version_id"`
	} `output:"policy_version"`
}
