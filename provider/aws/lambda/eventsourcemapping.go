// Code generated by awsgen from api version 2015-03-31. DO NOT EDIT.

package lambda

import "time"

// EventSourceMapping manages AWS Lambda EventSourceMappings.
type EventSourceMapping struct {
	// The maximum number of items to retrieve in a single batch.  Amazon
	// Kinesis - Default 100. Max 10,000.
	//   Amazon DynamoDB Streams - Default 100. Max 1,000.
	//   Amazon Simple Queue Service - Default 10. Max 10.
	//
	//
	BatchSize *int `cloudformation:"BatchSize" input:"batch_size"`

	// (Streams) If the function returns an error, split the batch in two and
	// retry.
	BisectBatchOnFunctionError *bool `cloudformation:"BisectBatchOnFunctionError" input:"bisect_batch_on_function_error"`

	// (Streams) An Amazon SQS queue or Amazon SNS topic destination for
	// discarded records.
	DestinationConfig *struct {
		// The destination configuration for failed invocations.
		OnFailure *struct {
			// The Amazon Resource Name (ARN) of the destination resource.
			Destination *string `cloudformation:"Destination" input:"destination"`
		} `cloudformation:"OnFailure" input:"on_failure"`

		// The destination configuration for successful invocations.
		OnSuccess *struct {
			// The Amazon Resource Name (ARN) of the destination resource.
			Destination *string `input:"destination"`
		} `input:"on_success"`
	} `cloudformation:"DestinationConfig" input:"destination_config"`

	// Disables the event source mapping to pause polling and invocation.
	Enabled *bool `cloudformation:"Enabled" input:"enabled"`

	// The Amazon Resource Name (ARN) of the event source.  Amazon Kinesis -
	// The ARN of the data stream or a stream consumer.
	//   Amazon DynamoDB Streams - The ARN of the stream.
	//   Amazon Simple Queue Service - The ARN of the queue.
	//
	//
	EventSource string `cloudformation:"EventSourceArn" input:"event_source" json:"EventSourceArn"`

	// The name of the Lambda function.
	//
	// Name formats
	//
	//   Function name - MyFunction.
	//   Function ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction.
	//   Version or Alias ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD.
	//   Partial ARN - 123456789012:function:MyFunction.
	//
	// The length constraint applies only to the full ARN. If you specify only the function
	// name, it's limited to 64 characters in length.
	Function string `cloudformation:"FunctionName" input:"function" json:"FunctionName"`

	// (Streams) The maximum amount of time to gather records before invoking
	// the function, in seconds.
	MaxBatchWindow *int `cloudformation:"MaximumBatchingWindowInSeconds" input:"max_batch_window" json:"MaximumBatchingWindowInSeconds"`

	// (Streams) The maximum age of a record that Lambda sends to a function
	// for processing.
	MaxRecordAge *int `cloudformation:"MaximumRecordAgeInSeconds" input:"max_record_age" json:"MaximumRecordAgeInSeconds"`

	// (Streams) The maximum number of times to retry when the function returns
	// an error.
	MaxRetries *int `cloudformation:"MaximumRetryAttempts" input:"max_retries" json:"MaximumRetryAttempts"`

	// (Streams) The number of batches to process from each shard concurrently.
	ParallelizationFactor *int `cloudformation:"ParallelizationFactor" input:"parallelization_factor"`

	// The position in a stream from which to start reading. Required for
	// Amazon Kinesis and Amazon DynamoDB Streams sources. AT_TIMESTAMP is only
	// supported for Amazon Kinesis streams.
	StartingPosition *string `cloudformation:"StartingPosition" input:"starting_position"`

	// With StartingPosition set to AT_TIMESTAMP, the time from which to start
	// reading.
	StartingPositionTimestamp *time.Time `input:"starting_position_timestamp"`

	// Outputs:

	// The ARN of the Lambda function.
	FunctionARN *string `json:"FunctionArn" output:"function_arn"`

	// The date that the event source mapping was last updated, or its state
	// changed.
	LastModified *time.Time `output:"last_modified"`

	// The result of the last AWS Lambda invocation of your Lambda function.
	LastProcessingResult *string `output:"last_processing_result"`

	// The state of the event source mapping. It can be one of the following:
	// Creating, Enabling, Enabled, Disabling, Disabled, Updating, or Deleting.
	State *string `output:"state"`

	// Indicates whether the last change to the event source mapping was made
	// by a user, or by the Lambda service.
	StateTransitionReason *string `output:"state_transition_reason"`

	// The identifier of the event source mapping.
	UUID *string `output:"uuid"`
}

// CloudFormationType returns the CloudFormation type for a AWS Lambda EventSourceMapping.
func (EventSourceMapping) CloudFormationType() string { return "AWS::Lambda::EventSourceMapping" }
